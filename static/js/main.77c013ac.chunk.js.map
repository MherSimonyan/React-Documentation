{"version":3,"sources":["Redux/Reducers/mainPageReducer.js","Redux/Reducers/CVPageReducer.js","Redux/redux-store.js","Components/MainPage.js","Components/Header.js","Components/CV.js","App.js","serviceWorker.js","index.js","images/bars-solid.svg"],"names":["initialState","name","lastName","message","mainPageReducer","state","action","type","email","htmlLevel","cssLevel","jsLevel","CVPageReducer","reducers","combineReducers","mainPage","CVPage","CVReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","MainPage","props","value","onChange","e","writeMessage","target","connect","dispatch","writeMessageActionCreator","Header","useEffect","barsbtn","document","getElementById","dropMenu","querySelector","addEventListener","classList","toggle","className","id","to","src","bars","alt","CVForm","length","setName","setLastName","setEmail","setHTML","setCSS","setJS","onSubmit","json","preventDefault","alert","JSON","stringify","placeholder","style","width","CV","setNameActionCreator","setLastNameActionCreator","setEmailActionCreator","setHTMLActionCreator","setCSSActionCreator","setJSActionCreator","App","path","render","React","Component","AppContainer","withRouter","AppComponent","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.77c013ac.chunk.js","sourcesContent":["const WRITE_MESSAGE = \"WRITE_MESSAGE\";\r\n\r\nlet initialState = {\r\n  name: \"Mher\",\r\n  lastName: \"Simonyan\",\r\n  message: null\r\n}\r\n\r\nconst mainPageReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case WRITE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const writeMessageActionCreator = (message) => ({ type: WRITE_MESSAGE, message });\r\n\r\nexport default mainPageReducer;","const CHANGE_NAME = \"CHANGE_NAME\";\r\nconst CHANGE_LAST_NAME = \"CHANGE_LAST_NAME\";\r\nconst CHANGE_EMAIL = \"CHANGE_EMAIL\";\r\nconst CHANGE_HTML_LEVEL = \"CHANGE_HTML_LEVEL\";\r\nconst CHANGE_CSS_LEVEL = \"CHANGE_CSS_LEVEL\";\r\nconst CHANGE_JS_LEVEL = \"CHANGE_JS_LEVEL\";\r\n\r\nlet initialState = {\r\n  name: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  htmlLevel: 0,\r\n  cssLevel: 0,\r\n  jsLevel: 0\r\n}\r\n\r\nconst CVPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      }\r\n    case CHANGE_LAST_NAME:\r\n      return {\r\n        ...state,\r\n        lastName: action.lastName\r\n      }\r\n    case CHANGE_EMAIL:\r\n      return {\r\n        ...state,\r\n        email: action.email\r\n      }\r\n    case CHANGE_HTML_LEVEL:\r\n      return {\r\n        ...state,\r\n        htmlLevel: action.htmlLevel\r\n      }\r\n    case CHANGE_CSS_LEVEL:\r\n      return {\r\n        ...state,\r\n        cssLevel: action.cssLevel\r\n      }\r\n    case CHANGE_JS_LEVEL:\r\n      return {\r\n        ...state,\r\n        jsLevel: action.jsLevel\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setNameActionCreator = (name) => ({ type: CHANGE_NAME, name });\r\nexport const setLastNameActionCreator = (lastName) => ({ type: CHANGE_LAST_NAME, lastName });\r\nexport const setEmailActionCreator = (email) => ({ type: CHANGE_EMAIL, email });\r\nexport const setHTMLActionCreator = (htmlLevel) => ({ type: CHANGE_HTML_LEVEL, htmlLevel });\r\nexport const setCSSActionCreator = (cssLevel) => ({ type: CHANGE_CSS_LEVEL, cssLevel });\r\nexport const setJSActionCreator = (jsLevel) => ({ type: CHANGE_JS_LEVEL, jsLevel });\r\n\r\nexport default CVPageReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport mainPageReducer from './Reducers/mainPageReducer';\r\nimport CVReducer from './Reducers/CVPageReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n  mainPage: mainPageReducer,\r\n  CVPage: CVReducer,\r\n  form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n  applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { writeMessageActionCreator } from '../Redux/Reducers/mainPageReducer'\r\n\r\nconst MainPage = (props) => {\r\n  const onChange = (e) => {\r\n    props.writeMessage(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{props.message}</h1>\r\n      <input type=\"text\" value={props.message || \"\"} onChange={onChange} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst MainPageContainer = (props) => {\r\n  return (\r\n    <MainPage message={props.message} writeMessage={props.writeMessage} />\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  message: state.mainPage.message\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  writeMessage: (message) => {\r\n    dispatch(writeMessageActionCreator(message));\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageContainer);","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport bars from './../images/bars-solid.svg'\r\n\r\nconst Header = (props) => {\r\n  useEffect(() => {\r\n    let barsbtn = document.getElementById(\"bars\");\r\n    let dropMenu = document.querySelector(\".dropmenu\");\r\n    barsbtn.addEventListener('click', () => {\r\n      dropMenu.classList.toggle(\"active\");\r\n      barsbtn.classList.toggle('rotated');\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <header className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"title col-3\">\r\n            <h1 id=\"nameOfSite\">Simer</h1>\r\n          </div>\r\n          <div className=\"navigation col-9\">\r\n            <nav>\r\n              <ul className=\"menu\">\r\n                <li><NavLink to=\"/mainpage\">Main</NavLink></li>\r\n                <li><NavLink to=\"/services\">Services</NavLink></li>\r\n                <li><NavLink to=\"/makeCV\">Make a CV</NavLink></li>\r\n                <li id=\"bars\">\r\n                  <img src={bars} alt=\"bars\" />\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <ul className=\"dropmenu\">\r\n        <li><NavLink to=\"/mainpage\">Main</NavLink></li>\r\n        <li><NavLink to=\"/services\">Services</NavLink></li>\r\n        <li><NavLink to=\"/makeCV\">Make a CV</NavLink></li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setNameActionCreator,\r\n  setLastNameActionCreator,\r\n  setEmailActionCreator,\r\n  setHTMLActionCreator,\r\n  setCSSActionCreator,\r\n  setJSActionCreator,\r\n} from '../Redux/Reducers/CVPageReducer'\r\n\r\nconst CVForm = (props) => {\r\n  const onChange = (e, type) => {\r\n    switch (type) {\r\n      case \"name\":\r\n        if (e.target.value.length <= 20)\r\n          props.setName(e.target.value)\r\n        break;\r\n      case \"lastName\":\r\n        if (e.target.value.length <= 20)\r\n          props.setLastName(e.target.value)\r\n        break;\r\n      case \"email\":\r\n        if (e.target.value.length <= 30)\r\n          props.setEmail(e.target.value)\r\n        break;\r\n      case \"html\":\r\n        if (+e.target.value <= 100)\r\n          props.setHTML(+e.target.value)\r\n        break;\r\n      case \"css\":\r\n        if (+e.target.value <= 100)\r\n          props.setCSS(+e.target.value)\r\n        break;\r\n      case \"js\":\r\n        if (+e.target.value <= 100)\r\n          props.setJS(+e.target.value)\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const onSubmit = (e, json) => {\r\n    e.preventDefault();\r\n    alert(json);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => {\r\n      onSubmit(e, JSON.stringify({\r\n        name: props.name,\r\n        lastName: props.lastName,\r\n        email: props.email,\r\n        htmlLevel: props.htmlLevel,\r\n        cssLevel: props.cssLevel,\r\n        jsLevel: props.jsLevel\r\n      }, null, 2))\r\n    }}>\r\n      <div className=\"about\">\r\n        <input type=\"text\" placeholder=\"Name\" value={props.name}\r\n          onChange={(e) => onChange(e, \"name\")} className=\"aboutInput\" />\r\n        <input type=\"text\" placeholder=\"LastName\" value={props.lastName}\r\n          onChange={(e) => onChange(e, \"lastName\")} className=\"aboutInput\" />\r\n        <input type=\"text\" placeholder=\"Email\" value={props.email}\r\n          onChange={(e) => onChange(e, \"email\")} className=\"aboutInput\" />\r\n      </div>\r\n      <div className=\"skills\">\r\n        <div className=\"skillRatings\">\r\n          <p className=\"description\">HTML Level</p>\r\n          <div></div>\r\n          <div style={{ width: props.htmlLevel * 80 / 100 + \"%\" }}></div>\r\n          <input type=\"text\" value={props.htmlLevel} onChange={(e) => onChange(e, \"html\")} className=\"skillInput\" /> %\r\n        </div>\r\n        <div className=\"skillRatings\">\r\n          <p className=\"description\">CSS Level</p>\r\n          <div></div>\r\n          <div style={{ width: props.cssLevel * 80 / 100 + \"%\" }}></div>\r\n          <input type=\"text\" value={props.cssLevel} onChange={(e) => onChange(e, \"css\")} className=\"skillInput\" /> %\r\n        </div>\r\n        <div className=\"skillRatings\">\r\n          <p className=\"description\">JS Level</p>\r\n          <div></div>\r\n          <div style={{ width: props.jsLevel * 80 / 100 + \"%\" }}></div>\r\n          <input type=\"text\" value={props.jsLevel} onChange={(e) => onChange(e, \"js\")} className=\"skillInput\" /> %\r\n        </div>\r\n      </div>\r\n      <button className=\"submit btn btn-outline-success\">SEND</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst CV = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"title\">\r\n        <h2>Specify your skills</h2>\r\n      </div>\r\n      <CVForm {...props} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CVContainer = (props) => {\r\n  return (\r\n    <CV {...props} />\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  name: state.CVPage.name,\r\n  lastName: state.CVPage.lastName,\r\n  email: state.CVPage.email,\r\n  htmlLevel: state.CVPage.htmlLevel,\r\n  cssLevel: state.CVPage.cssLevel,\r\n  jsLevel: state.CVPage.jsLevel\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  setName: (name) => {\r\n    dispatch(setNameActionCreator(name));\r\n  },\r\n  setLastName: (lastName) => {\r\n    dispatch(setLastNameActionCreator(lastName));\r\n  },\r\n  setEmail: (email) => {\r\n    dispatch(setEmailActionCreator(email));\r\n  },\r\n  setHTML: (htmlLevel) => {\r\n    dispatch(setHTMLActionCreator(htmlLevel));\r\n  },\r\n  setCSS: (cssLevel) => {\r\n    dispatch(setCSSActionCreator(cssLevel));\r\n  },\r\n  setJS: (jsLevel) => {\r\n    dispatch(setJSActionCreator(jsLevel));\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CVContainer);","import './App.css';\nimport React from 'react';\nimport { withRouter, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/redux-store';\nimport MainPageContainer from './Components/MainPage';\nimport Header from './Components/Header';\nimport CV from './Components/CV';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <Header />\n        </div>\n        <div className=\"content container\">\n          <Route path='/mainpage' render={() => <MainPageContainer />} />\n          <Route path='/makeCV' render={() => <CV />} />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nlet AppContainer = compose(\n  withRouter\n)(App);\n\nconst AppComponent = (props) => {\n  return (\n    // <HashRouter>\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer {...props} name=\"Hrant\" />\n      </Provider>\n    </BrowserRouter>\n    // </HashRouter>\n  )\n}\n\nexport default AppComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport AppComponent from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppComponent />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bars-solid.bdcaa185.svg\";"],"sourceRoot":""}